{"version":3,"sources":["themes/index.js","contexts/ThemeContext.js","views/view-utils/Framework.js","_services/other-question.service.js","views/Pages/quiz/questions/new/Question.js","views/Pages/quiz/questions/new/QuestionCount.js","views/Pages/quiz/questions/new/AnswerOption.js","views/Pages/quiz/questions/new/Quiz.js","views/Pages/quiz/questions/QuestionsContainer.js"],"names":["createContext","$type","globalBackground","globalColor","fadedColor","background","borderColor","backgroundDark","modalBackground","shadowColor","red","blue","tippy","scale","MEDIA","xs","sm","md","lg","xl","hover","keyframes","Center","createGlobalStyle","THEMES","props","theme","styled","div","Container","mobilePadding","defaultProps","children","rest","spacing","base","css","filter","size","map","button","undefined","getQuestionsByQuizId","quizLink","axios","get","config","storeOthersResponse","data","post","getResultsByQuizLink","getFriendResult","userId","Question","className","content","QuestionCount","counter","total","AnswerOption","type","name","checked","answerType","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","key","questionId","classNames","component","timeout","enter","exit","questionTotal","question","answerOptions","option","QuestionsContainer","match","params","console","log","state","title","questions","questionTag","answersCount","isFinished","handleAnswerSelected","bind","self","this","service","then","response","setState","quizId","catch","error","shuffledAnswerOptions","shuffleArray","options","question_text","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","currentQuestion","optionAnswerId","err","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setIsFinished","getIsFinished","LandingLayout","ItrendLogo","checkBackground","history","push","renderCreated","renderQuiz","Component"],"mappings":"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","file":"static/js/16.12e6841c.chunk.js","sourcesContent":["export default {\r\n  light: {\r\n    $type: 'light',\r\n    globalBackground: '#f2f4fa',\r\n    globalColor: '#55586a',\r\n    fadedColor: '#6b768b',\r\n    background: '#fff',\r\n    borderColor: 'rgba(0, 32, 128, 0.12)',\r\n    backgroundDark: '#e2eaf2',\r\n    modalBackground: '#fff',\r\n    shadowColor: 'rgba(0, 16, 64, 0.2)',\r\n    red: '#ff1964',\r\n    blue: '#4a7eff',\r\n    tippy: 'google',\r\n    scale: [\r\n      '#f2246c',\r\n      '#e9557f',\r\n      '#ff7d8f',\r\n      '#acb5c5',\r\n      '#85c89e',\r\n      '#6bbb94',\r\n      '#00b781',\r\n    ],\r\n  },\r\n  dark: {\r\n    $type: 'dark',\r\n    globalBackground: '#262c45',\r\n    globalColor: '#d9eeff',\r\n    fadedColor: '#8b98e1',\r\n    background: '#2c3451',\r\n    borderColor: '#181b2e',\r\n    backgroundDark: '#1e2238',\r\n    modalBackground: 'radial-gradient(circle at 20% 20%, #2d3451, #262b43)',\r\n    shadowColor: 'rgba(0, 2, 4, 0.3)',\r\n    red: '#ff578e',\r\n    blue: '#76aaff',\r\n    tippy: 'translucent',\r\n    scale: [\r\n      '#ff6a9e',\r\n      '#f74a86',\r\n      '#cf5274',\r\n      '#646c8c',\r\n      '#5ba58f',\r\n      '#2cca9c',\r\n      '#10dca0',\r\n    ],\r\n  },\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport default createContext()\r\n","import React, { useContext } from 'react'\r\nimport styled, { createGlobalStyle, css, keyframes } from 'styled-components'\r\nimport ThemeContext from '../../contexts/ThemeContext'\r\nimport THEMES from '../../themes'\r\n\r\nexport const MEDIA = {\r\n  xs: '@media (min-width: 360px)',\r\n  sm: '@media (min-width: 576px)',\r\n  md: '@media (min-width: 768px)',\r\n  lg: '@media (min-width: 992px)',\r\n  xl: '@media (min-width: 1200px)',\r\n}\r\n\r\nexport const CSS_EASING = {\r\n  spring: 'cubic-bezier(0.53, 2.5, 0.36, 0.85)',\r\n  easeOutQuart: 'cubic-bezier(0.165, 0.84, 0.44, 1)',\r\n  easeOutQuint: 'cubic-bezier(0.23, 1, 0.32, 1)',\r\n}\r\n\r\nconst hover = keyframes`\r\n  from {\r\n    transform: translateY(-12px);\r\n  }\r\n  to {\r\n    transform: translateY(-20px);\r\n  }\r\n`\r\n\r\nexport const TippyThemes = createGlobalStyle`\r\n  .tippy-tooltip {\r\n    max-width: 500px;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    .tippy-popper {\r\n      max-width: 96%;\r\n    }\r\n  }\r\n\r\n  .tippy-tooltip.blue-theme {\r\n    background-color: ${THEMES.light.blue};\r\n    box-shadow: 0 15px 30px -2px ${props => props.theme.shadowColor};\r\n    font-size: 13px;\r\n    font-weight: 600;\r\n    padding: 3px 6px 4px;\r\n    color: white;\r\n\r\n    &[data-size=\"large\"] {\r\n      font-size: 15px;\r\n      padding: 4px 8px;\r\n    }\r\n  }\r\n\r\n  .tippy-tooltip.animated-theme {\r\n    animation: ${hover} 0.8s ease infinite alternate;\r\n  }\r\n\r\n  .tippy-popper[x-placement^='top'] .tippy-tooltip.blue-theme .tippy-arrow {\r\n    border-top-color: ${THEMES.light.blue};\r\n  }\r\n  .tippy-popper[x-placement^='bottom'] .tippy-tooltip.blue-theme .tippy-arrow {\r\n    border-bottom-color: ${THEMES.light.blue};\r\n  }\r\n  .tippy-popper[x-placement^='left'] .tippy-tooltip.blue-theme .tippy-arrow {\r\n    border-left-color: ${THEMES.light.blue};\r\n  }\r\n  .tippy-popper[x-placement^='right'] .tippy-tooltip.blue-theme .tippy-arrow {\r\n    border-right-color: ${THEMES.light.blue};\r\n  }\r\n\r\n  .tippy-tooltip.translucent-theme {\r\n    font-weight: 600;\r\n    background-color:${THEMES.dark.backgroundDark};\r\n    backdrop-filter: blur(10px);\r\n\r\n    .tippy-backdrop {\r\n      background-color: ${THEMES.dark.backgroundDark};\r\n    }\r\n\r\n    .tippy-roundarrow {\r\n      fill: ${THEMES.dark.backgroundDark};\r\n    }\r\n  }\r\n  .tippy-popper[x-placement^='top'] .tippy-tooltip.translucent-theme .tippy-arrow {\r\n    border-top-color: ${THEMES.dark.backgroundDark};\r\n  }\r\n  .tippy-popper[x-placement^='bottom'] .tippy-tooltip.translucent-theme .tippy-arrow {\r\n    border-bottom-color: ${THEMES.dark.backgroundDark};\r\n  }\r\n  .tippy-popper[x-placement^='left'] .tippy-tooltip.translucent-theme .tippy-arrow {\r\n    border-left-color: ${THEMES.dark.backgroundDark};\r\n  }\r\n  .tippy-popper[x-placement^='right'] .tippy-tooltip.translucent-theme .tippy-arrow {\r\n    border-right-color: ${THEMES.dark.backgroundDark};\r\n  }\r\n\r\n  .tippy-tooltip.left-aligned-theme {\r\n    text-align: left;\r\n    width: fit-content;\r\n  }\r\n\r\n  .tippy-tooltip.hint-theme {\r\n    font-size: 15px;\r\n    padding: 15px;\r\n    max-width: 350px;\r\n\r\n    .tippy-arrow {\r\n      transform: scale(1.5);\r\n    }\r\n  }\r\n\r\n  .tippy-tooltip.agreement-button-theme {\r\n    font-size: 12px;\r\n    padding: 4px 8px;\r\n    font-weight: 500;\r\n\r\n    .tippy-backdrop {\r\n      background: #191d2e;\r\n    }\r\n  }\r\n`\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n\r\n  body {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n    background: ${props => props.theme.globalBackground};\r\n    color: ${props => props.theme.globalColor};\r\n    line-height: 1.6;\r\n    font-size: 17px;\r\n    transition-property: background, color;\r\n    transition-duration: 0.2s;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  :focus:not(.focus-visible) {\r\n    outline: 0;\r\n  }\r\n\r\n  &::-moz-selection {\r\n    background-color: rgba(50, 50, 255, 0.5);\r\n    color: white;\r\n  }\r\n  &::selection {\r\n    background-color: rgba(50, 50, 255, 0.5);\r\n    color: white;\r\n  }\r\n`\r\n\r\nexport const Center = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  max-width: 1000px;\r\n  padding: 0 ${props => props.mobilePadding}%;\r\n  margin: 0 auto;\r\n\r\n  ${MEDIA.sm} {\r\n    padding: 0 25px;\r\n  }\r\n\r\n  ${MEDIA.md} {\r\n    padding: 0 40px;\r\n  }\r\n\r\n  ${MEDIA.lg} {\r\n    padding: 0 50px;\r\n  }\r\n`\r\nContainer.defaultProps = {\r\n  mobilePadding: 5,\r\n}\r\n\r\nexport const Row = styled(({ children, spacing, ...rest }) => (\r\n  <div {...rest}>{children}</div>\r\n))`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin: 0 -${props => props.spacing}px;\r\n`\r\nRow.defaultProps = {\r\n  spacing: 15,\r\n}\r\n\r\nexport const Col = styled(\r\n  ({ children, base, xs, sm, md, lg, xl, spacing, ...rest }) => (\r\n    <div {...rest}>{children}</div>\r\n  ),\r\n)`\r\n  flex: 1;\r\n  padding: 0 ${props => props.spacing}px;\r\n  ${props =>\r\n    props.base &&\r\n    css`\r\n      flex-basis: ${props => (100 * props.base) / 12}%;\r\n    `}\r\n  ${props =>\r\n    ['xs', 'sm', 'md', 'lg', 'xl']\r\n      .filter(size => props[size])\r\n      .map(\r\n        size => css`\r\n          ${MEDIA[size]} {\r\n            flex-basis: ${props => (100 * props[size]) / 12}%;\r\n          }\r\n        `,\r\n      )};\r\n`\r\nCol.defaultProps = {\r\n  spacing: 15,\r\n}\r\n\r\nconst ButtonStyled = styled.button`\r\n  background: ${props => props.theme.background};\r\n  background-clip: ${props =>\r\n    props.theme.$type === 'light' ? 'padding-box' : undefined};\r\n  display: inline-block;\r\n  padding: ${props => (props.size === 'large' ? '12px 20px' : '8px 14px')};\r\n  color: ${props => props.theme.blue};\r\n  text-decoration: none;\r\n  border-radius: 4px;\r\n  font-weight: 600;\r\n  will-change: opacity;\r\n  transition: border 0.25s, background 0.25s, box-shadow 0.25s,\r\n    transform 0.5s ${CSS_EASING.spring};\r\n  background-size: 101% 100%;\r\n  font-size: ${props => (props.size === 'large' ? '18px' : '15px')};\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  cursor: pointer;\r\n  transform: scale(1.0001);\r\n  user-select: none;\r\n\r\n  &:hover {\r\n    filter: brightness(1.2);\r\n    box-shadow: 0 12px 40px -8px ${props => props.theme.shadowColor};\r\n    border-color: transparent;\r\n  }\r\n\r\n  &:active {\r\n    filter: none;\r\n    box-shadow: 0 4px 20px -4px ${props => props.theme.shadowColor};\r\n    transform: scale(0.98);\r\n  }\r\n\r\n  &[disabled] {\r\n    cursor: not-allowed;\r\n    box-shadow: none;\r\n    opacity: 0.7;\r\n    filter: none;\r\n  }\r\n`\r\n\r\nexport function Button({ children, ...rest }) {\r\n  const [theme] = useContext(ThemeContext)\r\n  return (\r\n    <ButtonStyled {...rest} theme={theme}>\r\n      {children}\r\n    </ButtonStyled>\r\n  )\r\n}\r\nButton.defaultProps = {\r\n  type: 'primary',\r\n}\r\n","import config from 'react-global-configuration';\nimport axios from 'axios';\n\n\n\nconst getQuestionsByQuizId = (quizLink)=>{\n    return axios.get(`${config.get('apiUrl')}/get-questions/${quizLink}`);\n\n}\nconst storeOthersResponse = (data)=>{\n    return axios.post(`${config.get('apiUrl')}/other-test`,data);\n}\n\nconst getResultsByQuizLink = (quizLink)=>{\n  return axios.get(`${config.get('apiUrl')}/all-scores?quizLink=${quizLink}`);\n}\nconst getFriendResult = (quizLink, userId)=>{\n  return axios.get(`${config.get('apiUrl')}/friend-score?quizLink=${quizLink}&userId=${userId}`);\n}\nexport default {\n    getQuestionsByQuizId,\n    storeOthersResponse,\n    getResultsByQuizLink,\n    getFriendResult\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Question(props) {\r\n  return <h2 className=\"question\">{props.content}</h2>;\r\n}\r\n\r\nQuestion.propTypes = {\r\n  content: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Question;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction QuestionCount(props) {\r\n  return (\r\n    <div className=\"questionCount\">\r\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuestionCount.propTypes = {\r\n  counter: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired\r\n};\r\n\r\nexport default QuestionCount;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AnswerOption(props) {\r\n  return (\r\n    <li className=\"answerOption\">\r\n      <input\r\n        type=\"radio\"\r\n        className=\"radioCustomButton\"\r\n        name=\"radioGroup\"\r\n        checked={props.answerType === props.answer}\r\n        id={props.answerType}\r\n        value={props.answerType}\r\n        disabled={props.answer}\r\n        onChange={props.onAnswerSelected}\r\n      />\r\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\r\n        {props.answerContent}\r\n      </label>\r\n    </li>\r\n  );\r\n}\r\n\r\nAnswerOption.propTypes = {\r\n  answerType: PropTypes.string.isRequired,\r\n  answerContent: PropTypes.string.isRequired,\r\n  answer: PropTypes.string.isRequired,\r\n  onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AnswerOption;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Question from './Question';\r\nimport QuestionCount from './QuestionCount';\r\nimport AnswerOption from './AnswerOption';\r\n\r\nfunction Quiz(props) {\r\n    function renderAnswerOptions(key) {\r\n        return (\r\n            <AnswerOption\r\n                key={key.id}\r\n                answerContent={key.option}\r\n                answerType={`${key.id}`}\r\n                answer={props.answer}\r\n                questionId={props.questionId}\r\n                onAnswerSelected={props.onAnswerSelected}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <TransitionGroup>\r\n            <CSSTransition key={props.questionId}\r\n                classNames=\"container\"\r\n                component=\"div\" \r\n                timeout= {{enter:500, exit:300}} >\r\n                <div >\r\n                    <QuestionCount counter={props.questionId} total={props.questionTotal} />\r\n                    <Question content={props.question} />\r\n                    <ul className=\"answerOptions\">\r\n                        {props.answerOptions.map(renderAnswerOptions)}\r\n                    </ul>\r\n                </div>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n\r\n    );\r\n}\r\n\r\nQuiz.propTypes = {\r\n    answer: PropTypes.string.isRequired,\r\n    answerOptions: PropTypes.array.isRequired,\r\n    question: PropTypes.string.isRequired,\r\n    questionId: PropTypes.number.isRequired,\r\n    questionTotal: PropTypes.number.isRequired,\r\n    onAnswerSelected: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { Component } from 'react';\nimport Quiz from './new/Quiz';\nimport { Center } from '../../../view-utils/Framework';\nimport service from '../../../../_services/other-question.service';\nimport './index.css';\nimport { ItrendLogo } from '../../../../containers/DefaultLayout/LogoThemed/ItrendLogo';\nimport { LandingLayout } from '../../Landing/components/LandingLayout';\n\n\nclass QuestionsContainer extends Component {\n\n  constructor(props) {\n\n    super(props)\n    const quizLink = this.props.match.params.quizLink;\n    const userId = this.props.match.params.userId;\n    console.log(this.props);\n\n    this.state = {\n      title: '',\n      questions: [],\n      userId: userId,\n      quizLink: quizLink,\n      questionTag: 1,\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      isFinished: false\n\n    }\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  };\n\n\n\n\n  async componentDidMount() {\n    var self = this.state;\n    console.log(self);\n\n    await service.getQuestionsByQuizId(self.quizLink).then(response => {\n      console.log(response);\n\n      this.setState({\n        title: response.data.title,\n        questions: response.data.questions,\n        quizId: self.quizLink,\n        userId: self.userId,\n\n      })\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n\n    const shuffledAnswerOptions = this.state.questions.map(question =>\n      this.shuffleArray(question.options)\n    );\n    this.setState({\n      question: this.state.questions[0].question_text,\n      answerOptions: shuffledAnswerOptions[0],\n      questionTag: this.state.questions[0].id\n    });\n  }\n  shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n  async setUserAnswer(answer) {\n    let currentQuestion = this.state.questions[this.state.questionId - 1];\n    console.log(currentQuestion);\n    let data = {\n      userId: this.state.userId,\n      questionId: currentQuestion.id,\n      optionAnswerId: answer,\n      quizLink: this.state.quizLink\n    }\n    await service.storeOthersResponse(data).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }\n\n  async handleAnswerSelected(event) {\n\n    await this.setUserAnswer(event.currentTarget.value);\n\n    if (this.state.questionId < this.state.questions.length) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n\n      setTimeout(() => this.setIsFinished(this.getIsFinished()), 300);\n\n\n    }\n  }\n\n  setIsFinished(isFinished) {\n    this.setState({\n      isFinished: !isFinished\n    })\n  }\n  getIsFinished() {\n    return this.state.isFinished;\n  }\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: this.state.questions[counter].question_text,\n      answerOptions: this.state.questions[counter].options,\n      questionTag: this.state.questions[0].id,\n      answer: ''\n    });\n  }\n\n\n\n\n  renderQuiz() {\n    return (\n      <div>\n        <LandingLayout></LandingLayout>\n        <Center>\n          <ItrendLogo className=\"mb-1\" checkBackground />\n          <Quiz\n            answer={this.state.answer}\n            answerOptions={this.state.answerOptions}\n            questionId={this.state.questionId}\n            question={this.state.question}\n            questionTotal={this.state.questions.length}\n            onAnswerSelected={this.handleAnswerSelected}\n          />\n        </Center>\n      </div>\n    );\n  }\n  renderCreated() {\n    let { userId, quizLink } = this.state;\n    this.props.history.push(`/results/${userId}/${quizLink}`);\n  }\n  render() {\n\n\n    return (\n      <div className='question-container'>\n        {\n\n          this.state.isFinished === true ? this.renderCreated() : this.renderQuiz()\n\n        }\n\n\n      </div>\n    );\n  }\n};\n\nexport default QuestionsContainer;\n"],"sourceRoot":""}